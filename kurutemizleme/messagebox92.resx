<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mesajIconu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hE04SAAAAABJRU5ErkJggg==
</value>
  </data>
</root>